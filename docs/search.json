[{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://alsabtay.github.io/ATAforecasting/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ali Sabri Taylan. Author, maintainer, copyright holder. Hanife Taylan Selamlar. Author, copyright holder. Guckan Yapar. Author, thesis advisor, copyright holder.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taylan , Taylan Selamlar H, Yapar G (2025). ATAforecasting: Automatic Time Series Analysis Forecasting using Ata Method. R package version 0.0.61, https://alsabtay.github.io/ATAforecasting/.","code":"@Manual{,   title = {ATAforecasting: Automatic Time Series Analysis and Forecasting using the Ata Method},   author = {Ali Sabri Taylan and Hanife {Taylan Selamlar} and Guckan Yapar},   year = {2025},   note = {R package version 0.0.61},   url = {https://alsabtay.github.io/ATAforecasting/}, }"},{"path":"https://alsabtay.github.io/ATAforecasting/index.html","id":"ataforecasting-","dir":"","previous_headings":"","what":"Automatic Time Series Analysis and Forecasting using the Ata Method","title":"Automatic Time Series Analysis and Forecasting using the Ata Method","text":"## Synopsis Automatic Time Series Analysis Forecasting using Ata Method Box-Cox Power Transformations Family Seasonal Decomposition Techniques.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Automatic Time Series Analysis and Forecasting using the Ata Method","text":"Ata Method new alternative forecasting method. method alternative two major forecasting approaches: Exponential Smoothing ARIMA. Ata method based modified simple exponential smoothing described Yapar, G. (2016) doi:10.15672/HJMS.201614320580, Yapar G., Capar, S., Selamlar, H. T., Yavuz, . (2017) doi:10.15672/HJMS.2017.493 Yapar G., Selamlar, H. T., Capar, S., Yavuz, . (2019) doi:10.15672/hujms.461032 new univariate time series forecasting method provides innovative solutions issues faced initialization optimization stages existing methods. Forecasting performance Ata method superior existing methods terms easy implementation accurate forecasting. can applied non-seasonal seasonal time series can decomposed four components (remainder, level, trend seasonal). methodology performed well M3 M4-competition dat","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Time Series Analysis and Forecasting using the Ata Method","text":"can install stable version CRAN: Development version latest features: Fable Modelling Wrappers ATAforecasting Package","code":"install.packages(\"ATAforecasting\") devtools::install_github(\"alsabtay/ATAforecasting\") devtools::install_github(\"alsabtay/fable.ata\")"},{"path":"https://alsabtay.github.io/ATAforecasting/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Automatic Time Series Analysis and Forecasting using the Ata Method","text":"USAccDeaths: Accidental Deaths US 1973–1978","code":"library(ATAforecasting) ATA(USAccDeaths, h = 18, model.type = \"A\", seasonal.type = \"A\", seasonal.model = \"stl\")"},{"path":"https://alsabtay.github.io/ATAforecasting/index.html","id":"links","dir":"","previous_headings":"","what":"Links","title":"Automatic Time Series Analysis and Forecasting using the Ata Method","text":"Github page Github.io page Project team website Github - Fable Modelling Wrappers ATAforecasting Package Github.io - Fable Modelling Wrappers ATAforecasting Package Github - Intermittent Ata Method Package Github.io Intermittent Ata Method Package","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Automatic Time Series Analysis and Forecasting using the Ata Method","text":"package free open source software, licensed GPL-3.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Accuracy Measures for The ATAforecasting — ATA.Accuracy","title":"Accuracy Measures for The ATAforecasting — ATA.Accuracy","text":"Returns ATA(p,q,phi)(E,T,S) applied `ata` object. Accuracy measures forecast model Returns range summary measures forecast accuracy. .sample provided, function measures test set forecast accuracy. .sample provided, function produces training set accuracy measures. measures calculated : lik\t\t: maximum likelihood functions sigma\t: residual variance. MAE\t\t: mean absolute error. MSE\t\t: mean square error. RMSE\t: root mean squared error. MPE\t\t: mean percentage error. MAPE\t: mean absolute percentage error. sMAPE\t: symmetric mean absolute percentage error. MASE\t: mean absolute scaled error. OWA\t\t: overall weighted average MASE sMAPE. MdAE\t: median absolute error. MdSE\t: median square error. RMdSE\t: root median squared error. MdPE\t: median percentage error. MdAPE\t: median absolute percentage error. sMdAPE\t: symmetric median absolute percentage error.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accuracy Measures for The ATAforecasting — ATA.Accuracy","text":"","code":"ATA.Accuracy(object, out.sample = NULL, print.out = TRUE)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accuracy Measures for The ATAforecasting — ATA.Accuracy","text":"object object class ata required. .sample numeric vector time series class ts msts -sample. print.Default TRUE. FALSE, summary ATA Method's accuracy measures shown.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Accuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accuracy Measures for The ATAforecasting — ATA.Accuracy","text":"Matrix giving forecast accuracy measures.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Accuracy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Accuracy Measures for The ATAforecasting — ATA.Accuracy","text":"#'Hyndman RJ, Koehler AB (2006). “Another look measures forecast accuracy.” International Journal Forecasting, 22(4), 679–688. #'Hyndman RJ, Athanasopoulos G (2019). Forecasting: principles practice. OTexts. https://otexts.com/fpp3/.","code":""},{"path":[]},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Accuracy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Accuracy Measures for The ATAforecasting — ATA.Accuracy","text":"Ali Sabri Taylan Hanife Taylan Selamlar","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Accuracy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accuracy Measures for The ATAforecasting — ATA.Accuracy","text":"","code":"trainATA <-  head(touristTR, 84) testATA <- window(touristTR, start = 2015, end = 2016.917) ata_fit <- ATA(trainATA, h=24, seasonal.test = TRUE, seasonal.model = \"decomp\")  #> ATA(2,2,1) (A,M,M)  #>  #>    model.type: M  #>  #>    seasonal.model: decomp  #>  #>    seasonal.type: M  #>  #>    forecast horizon: 24  #>  #>    accuracy.type: sMAPE  #>  #> Model Fitting Measures:  #>  #>               sigma2               loglik                  MAE  #> 25327678645.19519043       -1188.55670094      106527.45549230  #>                  MSE                 RMSE                  MPE  #> 23496762116.62686157      153286.53599265           0.12753452  #>                 MAPE                sMAPE                 MASE  #>           4.04068178           4.04508846           0.23313082  #>                  OWA  #>           0.00000468  #>  #> In-Sample Accuracy Measures:  #>  #>               MdAE               MdSE              RMdSE               MdPE  #>      67333.7563803 4533834748.2853584      67333.7563803          0.4018348  #>              MdAPE             sMdAPE  #>          3.2125716          3.2275752  #>  #> Out-Sample Accuracy Measures:  #>  #>   MAE   MSE  RMSE   MPE  MAPE sMAPE  MASE   OWA  #>    NA    NA    NA    NA    NA    NA    NA    NA  #>  #> Out-Sample Accuracy Measures:  #>  #>   MdAE   MdSE  RMdSE   MdPE  MdAPE sMdAPE  #>     NA     NA     NA     NA     NA     NA  #>  #> Information Criteria:  #>  #>      AIC     AICc      BIC  #> 2391.113 2392.587 2408.129  #>  #>  #>    user  system elapsed  #>   1.773   0.486   3.261  #>  #> calculation.time: 3.2608  #>  #>  #> Forecasts:  #> Time Series: #> Start = 2015.00694444444  #> End = 2016.92361111111  #> Frequency = 12  #>  [1] 1288568 1211322 1716223 2292963 3589547 4283724 5018661 5887346 4933780 #> [10] 4253560 2170497 1480814 1363260 1281536 1815704 2425875 3797616 4532031 #> [19] 5309568 6228607 5219767 4500118 2296310 1566650 #>  #>  ata_accuracy <- ATA.Accuracy(ata_fit, testATA) #> Model Fitting Measures:  #>  #>               sigma2               loglik                  MAE  #> 25327678645.19519043       -1188.55670094      106527.45549230  #>                  MSE                 RMSE                  MPE  #> 23496762116.62686157      153286.53599265           0.12753452  #>                 MAPE                sMAPE                 MASE  #>           4.04068178           4.04508846           0.23313082  #>                  OWA  #>           0.00000468  #>  #> Out-Sample Accuracy Measures:  #>  #>                    MAE                    MSE                   RMSE  #>        745266.93257918 1268723834847.21044922       1126376.41792041  #>                    MPE                   MAPE                  sMAPE  #>           -28.69225078            29.56321404            23.01067141  #>                   MASE                    OWA  #>             1.63098511             0.00002695  #>  #>"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BackTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Transformation Techniques for The ATAforecasting — ATA.BackTransform","title":"Back Transformation Techniques for The ATAforecasting — ATA.BackTransform","text":"function provides applicability different types back transformation techniques transformed data Ata method applied. ATA.BackTransform function works many different types inputs.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BackTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Transformation Techniques for The ATAforecasting — ATA.BackTransform","text":"","code":"ATA.BackTransform(X, tMethod, tLambda, tShift, tbiasadj = FALSE, tfvar = NULL)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BackTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Transformation Techniques for The ATAforecasting — ATA.BackTransform","text":"X numeric vector time series class ts msts -sample. tMethod Box-Cox power transformation family consist \"Box_Cox\", \"Sqrt\", \"Reciprocal\", \"Log\", \"NegLog\", \"Modulus\", \"BickelDoksum\", \"Manly\", \"Dual\", \"YeoJohnson\", \"GPower\", \"GLog\" ATAforecasting package. tLambda Box-Cox power transformation family parameter. NULL, data transformed model estimated. tShift Box-Cox power transformation family shifting parameter. NULL, data transformed model estimated. tbiasadj Use adjusted back-transformed mean Box-Cox transformations using forecast::BoxCox. transformed data used produce forecasts fitted values, regular back transformation result median forecasts. tbiasadj TRUE, adjustment made produce mean forecasts fitted values. tfvar Optional parameter required tbiasadj=TRUE. Can either forecast variance, list containing interval level, corresponding upper lower intervals.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BackTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Transformation Techniques for The ATAforecasting — ATA.BackTransform","text":"list object consists transformation parameters transformed data. ATA.Transform list containing least following elements: trfmX   : Transformed data tLambda : Box-Cox power transformation family parameter tShift  : Box-Cox power transformation family shifting parameter","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BackTransform.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Back Transformation Techniques for The ATAforecasting — ATA.BackTransform","text":"#'Tukey JW (1957). “Comparative Anatomy Transformations.” Annals Mathematical Statistics, 28(3), 602–632. #'Box GEP, Cox DR (1964). “Analysis Transformations.” Journal Royal Statistical Society. Series B (Methodological), 26(2), 211–252. #'Manly BFJ (1976). “Exponential data transformations.” Journal Royal Statistical Society Series D, 25(1), 37–42. #'John JA, Draper NR (1980). “alternative family transformations.” Journal Royal Statistical Society Series C, 29(2), 190–197. #'Bickel PJ, Doksum KA (1982). “analysis transformations revisited.” Journal American Statistical Association, 76(374), 296–311. #'Sakia RM (1992). “Box-Cox Transformation Technique: Review.” Journal Royal Statistical Society Series D, 41(2), 169–178. #'Guerrero VM (1993). “Time-series analysis supported power transformations.” Journal Forecasting, 12(1), 37–48. #'Yeo , Johnson RA (2000). “New Family Power Transformations Improve Normality Symmetry.” Biometrika, 87(4), 954–959. #'Durbin BP, Hardin JS, Hawkins DM, Rocke DM (2002). “variance-stabilizing transformation gene-expression microarray data.” Bioinformatics, 18(1), 105–110. #'Whittaker J, Whitehead C, Somers M (2005). “neglog transformation quantile regression analysis large credit scoring database.” Journal Royal Statistical Society Series C, 54(4), 863–878. #'Yang Z (2005). “modified family power transformations.” Economics Letters, 92(1), 14–19. #'Kelmansky DM, Martinez EJ, Leiva V (2013). “new variance stabilizing transformation gene expression data analysis.” Statistical Applications Genetics Molecular Biology, 12(6), 653–666.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BoxCoxAttr.html","id":null,"dir":"Reference","previous_headings":"","what":"The ATA.BoxCoxAttr function works with many different types of inputs. — ATA.BoxCoxAttr","title":"The ATA.BoxCoxAttr function works with many different types of inputs. — ATA.BoxCoxAttr","text":"ATA.BoxCoxAttr function works many different types inputs.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BoxCoxAttr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The ATA.BoxCoxAttr function works with many different types of inputs. — ATA.BoxCoxAttr","text":"","code":"ATA.BoxCoxAttr(   bcMethod = \"guerrero\",   bcLower = 0,   bcUpper = 5,   bcBiasAdj = FALSE )"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BoxCoxAttr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The ATA.BoxCoxAttr function works with many different types of inputs. — ATA.BoxCoxAttr","text":"bcMethod Choose method used calculating lambda. \"guerrero\" (Guerrero, V.M. (1993) default. method \"loglik\"). bcLower Lower limit possible lambda values. lower value limited -5. Default value 0. bcUpper Upper limit possible lambda values. upper value limited 5. Default value 5. bcBiasAdj Use adjusted back-transformed mean Box-Cox transformations. transformed data used produce forecasts fitted values, regular back transformation result median forecasts. bcBiasAdj TRUE, adjustment made produce mean forecasts fitted values. bcBiasAdj=TRUE. Can either forecast variance, list containing interval level, corresponding upper lower intervals.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BoxCoxAttr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The ATA.BoxCoxAttr function works with many different types of inputs. — ATA.BoxCoxAttr","text":"object class ataoptim.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BoxCoxAttr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The ATA.BoxCoxAttr function works with many different types of inputs. — ATA.BoxCoxAttr","text":"#'Box GEP, Cox DR (1964). “Analysis Transformations.” Journal Royal Statistical Society. Series B (Methodological), 26(2), 211–252. #'Guerrero VM (1993). “Time-series analysis supported power transformations.” Journal Forecasting, 12(1), 37–48.","code":""},{"path":[]},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.BoxCoxAttr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The ATA.BoxCoxAttr function works with many different types of inputs. — ATA.BoxCoxAttr","text":"Ali Sabri Taylan Hanife Taylan Selamlar","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.CI.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval function for the ATA Method — ATA.CI","title":"Confidence Interval function for the ATA Method — ATA.CI","text":"Confidence Interval function ATA Method","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.CI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval function for the ATA Method — ATA.CI","text":"","code":"ATA.CI(object, ci.level = 95)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.CI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval function for the ATA Method — ATA.CI","text":"object ATA object required. ci.level Confidence level, example: 90, 95 99.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.CI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval function for the ATA Method — ATA.CI","text":"confidence interval output ATA forecasts","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Core.html","id":null,"dir":"Reference","previous_headings":"","what":"The core algorithm of the ATA Method — ATA.Core","title":"The core algorithm of the ATA Method — ATA.Core","text":"core algorithm ATA Method","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The core algorithm of the ATA Method — ATA.Core","text":"","code":"ATA.Core(X, pk, qk, phik, mdlType, initialLevel, initialTrend)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core algorithm of the ATA Method — ATA.Core","text":"X numeric vector time series. pk Value Level parameter. qk Value Trend parameter. phik Value Damping Trend parameter. mdlType one-character string identifying method using framework terminology. initialLevel \"none\" default, none    : ATA Method calculates pth observation X level. mean     : ATA Method calculates average first p value Xfor level. median: ATA Method calculates median first p value Xfor level. initialTrend \"none\" default, none    : ATA Method calculates qth observation X trend. mean     : ATA Method calculates average first q value X(T)-X(T-1) trend. median: ATA Method calculates median first q value X(T)-X(T-1) trend.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The core algorithm of the ATA Method — ATA.Core","text":"Returns object class \"ATA\"","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Decomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal Decomposition for The ATAforecasting — ATA.Decomposition","title":"Seasonal Decomposition for The ATAforecasting — ATA.Decomposition","text":"Automatic seasonal decomposition ATA Method called ATA.Decomposition function ATAforecasting package. function returns seasonally adjusted data constructed removing seasonal component. methodology fully automatic. ATA.Decomposition function works many different types inputs.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Decomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal Decomposition for The ATAforecasting — ATA.Decomposition","text":"","code":"ATA.Decomposition(input, s.model, s.type, s.frequency, seas_attr_set)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Decomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal Decomposition for The ATAforecasting — ATA.Decomposition","text":"input must ts msts numeric object. numeric object, findPeriod must 1 2 3 4. msts object, findPeriod must 3 4. s.model string identifying method seasonal decomposition. NULL, \"decomp\" method default. c(\"none\", \"decomp\", \"stl\", \"stlplus\", \"tbats\", \"stR\") phrases methods denote. none    : seasonal decomposition required. decomp     : classical seasonal decomposition. decomp, stats package used. stl        : seasonal-trend decomposition procedure based loess developed Cleveland et al. (1990). stl, stats forecast packages used. Multiple seasonal periods allowed. stlplus    : seasonal-trend decomposition procedure based loess developed Cleveland et al. (1990). stlplus, stlplus package used. tbats   : exponential smoothing state space model Box–Cox transformation, ARMA errors, trend seasonal components.                             described De Livera, Hyndman & Snyder (2011). Parallel processing used default speed computations. tbats, forecast package used. Multiple seasonal periods allowed. stR        : seasonal-trend decomposition procedure based regression developed Dokumentov Hyndman (2015). stR, stR package used. Multiple seasonal periods allowed. x13        : seasonal-trend decomposition procedure based X13ARIMA/SEATS. x13, seasonal package used. x11        : seasonal-trend decomposition procedure based X11. x11, seasonal package used. s.type one-character string identifying method seasonal component framework. NULL, \"M\" default. letter \"\" additive model, letter \"M\" multiplicative model. s.frequency Value(s) seasonal periodicity. s.frequency integer, X must msts time series object. c(s1,s2,s3,...) multiple period. X multiple periodicity, \"tbats\" \"stR\" seasonal model selected. seas_attr_set Assign ATA.SeasAttr function. Attributes set unit root seasonality tests. example: period input data one seasonal pattern –> 12 monthly / 4 quarterly / 7 daily / 5 business days. periods input data complex/multiple seasonal patterns –> c(7,354.37,365.25).","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Decomposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal Decomposition for The ATAforecasting — ATA.Decomposition","text":"Seasonal components univariate time series. ATA.Decomposition list containing least following elements: AdjustedX Deseasonalized data SeasIndex Particular weights seasonality given cycle/frequency SeasActual Seasonality given original data SeasType Seasonal decomposition technique","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Decomposition.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Seasonal Decomposition for The ATAforecasting — ATA.Decomposition","text":"#'Shiskin J, Young AH, Musgrave JC (1967). “X-11 Variant Census-II Method Seasonal Adjustment Program.” Technical Report 15, Bureau U.S. Census. https://www.census.gov/content/dam/Census/library/working-papers/1967/adrm/shiskinyoungmusgrave1967.pdf. #'Dagum EB (1999). X11ARIMA/2000 Updated X11ARIMA/88 Seasonal Adjustment Method - Foundations Users' Manual. Statistics Canada. https://www.census.gov/content/dam/Census/library/working-papers/1999/adrm/emanual.pdf. #'Cleveland RB, Cleveland WS, McRae JE, Terpenning (1990). “STL: seasonal-trend decomposition procedure based loess.” Journal Official Statistics, 6(1), 3–73. #'Hafen RP (2010). Local regression models: Advancements, applications, new methods. Ph.D. thesis, Purdue University. #'Livera AMD, Hyndman RJ, Snyder RD (2011). “Forecasting Time Series Complex Seasonal Patterns Using Exponential Smoothing.” Journal American Statistical Association, 106(496), 1513–1527. #'Dokumentov , Hyndman RJ (2015). “STR: Seasonal-Trend Decomposition Procedure Based Regression.” Monash Econometrics Business Statistics Working Papers 13/15, Monash University, Department Econometrics Business Statistics. https://EconPapers.repec.org/RePEc:msh:ebswps:2015-13. #'Dokumentov , Hyndman RJ (2020). “STR: Seasonal-Trend Decomposition Procedure Based Regression.” 2009.05894. #'Monsell BC, Aston JAD, Koopman SJ (2003). “Toward X-13?” United States Census Bureau. https://www.census.gov/content/dam/Census/library/working-papers/2003/adrm/jsm2003bcm.pdf. #'Monsell BC (2007). “X-13A-S seasonal adjustment program.” Proceedings 2007 Federal Committee Statistical Methodology Research Conference. URL http://www. fcsm. gov/07papers/Monsell. II-B. pdf. #'Sax C, Eddelbuettel D (2018). “Seasonal Adjustment X-13ARIMA-SEATS R.” Journal Statistical Software, 87(11), 1–17.","code":""},{"path":[]},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Decomposition.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Seasonal Decomposition for The ATAforecasting — ATA.Decomposition","text":"Ali Sabri Taylan Hanife Taylan Selamlar","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecasting Method for The ATAforecasting — ATA.Forecast","title":"Forecasting Method for The ATAforecasting — ATA.Forecast","text":"ATA.Forecast generic function forecasting ATA Method.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecasting Method for The ATAforecasting — ATA.Forecast","text":"","code":"ATA.Forecast(   object,   h = NULL,   out.sample = NULL,   ci.level = 95,   negative.forecast = TRUE,   onestep = FALSE,   print.out = TRUE )"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecasting Method for The ATAforecasting — ATA.Forecast","text":"object ata object required forecast. h Number periods forecasting. .sample numeric vector time series class ts msts -sample. ci.level Confidence Interval levels forecasting. Default value 95. negative.forecast Negative values allowed forecasting. Default value TRUE. FALSE, negative values forecasting set 0. onestep Default FALSE. TRUE, dynamic forecast strategy uses one-step model multiple times (h forecast horizon) prediction prior time step used input making prediction following time step. print.Default TRUE. FALSE, forecast summary ATA Method shown.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecasting Method for The ATAforecasting — ATA.Forecast","text":"object class ata forecast values.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Forecast.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Forecasting Method for The ATAforecasting — ATA.Forecast","text":"#'Yapar G, Yavuz , Selamlar HT (2017). “Exponential Smoothing Fail? Depth Comparison ATA-Simple Simple Exponential Smoothing.” Turkish Journal Forecasting, 1(1), 30–39. #'Yapar G, Capar S, Selamlar HT, Yavuz (2018). “Modified Holt's Linear Trend Method.” Hacettepe University Journal Mathematics Statistics, 47(5), 1394–1403. #'Yapar G (2018). “Modified simple exponential smoothing.” Hacettepe University Journal Mathematics Statistics, 47(3), 741–754. #'Yapar G, Selamlar HT, Capar S, Yavuz (2019). “ATA method.” Hacettepe Journal Mathematics Statistics, 48(6), 1838-1844.","code":""},{"path":[]},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Forecast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forecasting Method for The ATAforecasting — ATA.Forecast","text":"Ali Sabri Taylan Hanife Taylan Selamlar","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecasting Method for The ATAforecasting — ATA.Forecast","text":"","code":"trainATA <-  head(touristTR, 84) ata_fit <- ATA(trainATA, parPHI = 1, seasonal.test = TRUE, seasonal.model = \"decomp\")  #> ATA(2,2,1) (A,M,M)  #>  #>    model.type: M  #>  #>    seasonal.model: decomp  #>  #>    seasonal.type: M  #>  #>    forecast horizon: 24  #>  #>    accuracy.type: sMAPE  #>  #> Model Fitting Measures:  #>  #>               sigma2               loglik                  MAE  #> 25327678645.19519043       -1188.55670094      106527.45549230  #>                  MSE                 RMSE                  MPE  #> 23496762116.62686157      153286.53599265           0.12753452  #>                 MAPE                sMAPE                 MASE  #>           4.04068178           4.04508846           0.23313082  #>                  OWA  #>           0.00000468  #>  #> In-Sample Accuracy Measures:  #>  #>               MdAE               MdSE              RMdSE               MdPE  #>      67333.7563803 4533834748.2853584      67333.7563803          0.4018348  #>              MdAPE             sMdAPE  #>          3.2125716          3.2275752  #>  #> Out-Sample Accuracy Measures:  #>  #>   MAE   MSE  RMSE   MPE  MAPE sMAPE  MASE   OWA  #>    NA    NA    NA    NA    NA    NA    NA    NA  #>  #> Out-Sample Accuracy Measures:  #>  #>   MdAE   MdSE  RMdSE   MdPE  MdAPE sMdAPE  #>     NA     NA     NA     NA     NA     NA  #>  #> Information Criteria:  #>  #>      AIC     AICc      BIC  #> 2391.113 2392.587 2408.129  #>  #>  #>    user  system elapsed  #>   0.077   0.067   0.257  #>  #> calculation.time: 0.2568  #>  #>  #> Forecasts:  #> Time Series: #> Start = 2015.00694444444  #> End = 2016.92361111111  #> Frequency = 12  #>  [1] 1288568 1211322 1716223 2292963 3589547 4283724 5018661 5887346 4933780 #> [10] 4253560 2170497 1480814 1363260 1281536 1815704 2425875 3797616 4532031 #> [19] 5309568 6228607 5219767 4500118 2296310 1566650 #>  #>  ata_fc <- ATA.Forecast(ata_fit, h=12) #> Time Series: #> Start = 2015.00694444444  #> End = 2015.92361111111  #> Frequency = 12  #>        lower forecast   upper #> 2015  969867  1271754 1573641 #> 2015  768220  1195153 1622086 #> 2015 1169918  1692802 2215686 #> 2015 1657210  2260985 2864759 #> 2015 2863372  3538412 4213452 #> 2015 3481949  4221419 4960888 #> 2016 4145447  4944165 5742884 #> 2016 4944330  5798196 6652062 #> 2016 3951934  4857595 5763257 #> 2016 3231957  4186608 5141259 #> 2016 1134438  2135685 3136931 #> 2016  410853  1456621 2502389"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.SeasAttr.html","id":null,"dir":"Reference","previous_headings":"","what":"Attributes Set For Unit Root and Seasonality Tests — ATA.SeasAttr","title":"Attributes Set For Unit Root and Seasonality Tests — ATA.SeasAttr","text":"function class seasonality tests using  corrgram.test ATAforecasting package, ndiffs nsdiffs functions forecast package. Also, function modified version ndiffs nsdiffs written Hyndman et al. forecast package. Please review manual vignette documents latest forecast package. According forecast package, ndiffs nsdiffs functions estimate number differences required make given time series stationary. ndiffs uses unit root tests determine number differences required time series made trend stationary. Several different tests available: uroot.test = 'kpss'\t\t: KPSS test used null hypothesis x stationary root unit-root alternative. test returns least number differences required pass test level uroot.alpha. uroot.test = 'adf'\t\t: Augmented Dickey-Fuller test used. uroot.test = 'pp'\t\t: Phillips-Perron test used. cases, null hypothesis x unit root stationary root alternative. test returns least number differences required fail test level alpha. nsdiffs uses seasonal unit root tests determine number seasonal differences required time series made stationary. Several different tests available: suroot.test = 'seas'\t\t: measure seasonal strength used, differencing selected seasonal strength (Wang, Smith & Hyndman, 2006) exceeds 0.64 (based minimizing MASE forecasting using auto.arima M3 M4 data). suroot.test = 'ch'\t\t\t: Canova-Hansen (1995) test used (null hypothesis deterministic seasonality) suroot.test = 'hegy'\t\t: Hylleberg, Engle, Granger & Yoo (1990) test used. suroot.test = 'ocsb'\t\t: Osborn-Chui-Smith-Birchenhall (1988) test used (null hypothesis seasonal unit root exists). suroot.test = 'correlogram'\t: function written based M4 Competition Seasonality Test.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.SeasAttr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attributes Set For Unit Root and Seasonality Tests — ATA.SeasAttr","text":"","code":"ATA.SeasAttr(   corrgram.tcrit = 1.28,   uroot.test = \"adf\",   suroot.test = \"correlogram\",   suroot.uroot = TRUE,   uroot.type = \"level\",   uroot.alpha = 0.05,   suroot.alpha = 0.05,   uroot.maxd = 2,   suroot.maxD = 1,   suroot.m = NULL,   uroot.pkg = \"tseries\",   multi.period = \"min\",   x13.estimate.maxiter = 1500,   x13.estimate.tol = 1e-05,   x11.estimate.maxiter = 1500,   x11.estimate.tol = 1e-05 )"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.SeasAttr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attributes Set For Unit Root and Seasonality Tests — ATA.SeasAttr","text":"corrgram.tcrit t-value autocorrelogram. uroot.test Type unit root test type seasonality test. Possible values \"adf\", \"pp\" \"kpss\". suroot.test Type seasonal unit root test use. Possible values \"correlogram\", \"seas\", \"hegy\", \"ch\" \"ocsb\". suroot.uroot TRUE, unit root test stationary seasonal unit root test allowed. uroot.type Specification deterministic component regression unit root test. Possible values \"level\" \"trend\". uroot.alpha Significant level unit root test, possible values range 0.01 0.1. suroot.alpha Significant level seasonal unit root test, possible values range 0.01 0.1 uroot.maxd Maximum number non-seasonal differences allowed. suroot.maxD Maximum number seasonal differences allowed. suroot.m Deprecated. Length seasonal period: frequency data nsdiffs. uroot.pkg Using urca tseries packages unit root test. default value \"urca\". multi.period Selection type multi seasonal period. min max function selection x13.estimate.maxiter Maximum iteration X13ARIMA/SEATS estimation x13.estimate.tol Convergence tolerence X13ARIMA/SEATS estimation x11.estimate.maxiter Maximum iteration X11 estimation x11.estimate.tol Convergence tolerence X11 estimation","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.SeasAttr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attributes Set For Unit Root and Seasonality Tests — ATA.SeasAttr","text":"object class ataoptim.","code":""},{"path":[]},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.SeasAttr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Attributes Set For Unit Root and Seasonality Tests — ATA.SeasAttr","text":"Ali Sabri Taylan Hanife Taylan Selamlar","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Seasonality.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonality Tests for The ATAforecasting — ATA.Seasonality","title":"Seasonality Tests for The ATAforecasting — ATA.Seasonality","text":"function class seasonality tests using  corrgram_test ATAforecasting package, ndiffs nsdiffs functions forecast package. Also, function modified version ndiffs nsdiffs written Hyndman et al. forecast package. Please review manual vignette documents latest forecast package. According forecast package, ndiffs nsdiffs functions estimate number differences required make given time series stationary. ndiffs uses unit root tests determine number differences required time series made trend stationary. Several different tests available: uroot.test = 'kpss'\t\t\t: KPSS test used null hypothesis x stationary root unit-root alternative. test returns least number differences required pass test level uroot.alpha. uroot.test = 'adf'\t\t\t: Augmented Dickey-Fuller test used. uroot.test = 'pp'\t\t\t: Phillips-Perron test used. cases, null hypothesis x unit root stationary root alternative. test returns least number differences required fail test level uroot.alpha. nsdiffs uses seasonal unit root tests determine number seasonal differences required time series made stationary. Several different tests available: suroot.test = 'seas'\t\t: measure seasonal strength used, differencing selected seasonal strength (Wang, Smith & Hyndman, 2006) exceeds 0.64 (based minimizing MASE forecasting using auto.arima M3 M4 data). suroot.test = 'ch'\t\t\t: Canova-Hansen (1995) test used (null hypothesis deterministic seasonality) suroot.test = 'hegy'\t\t: Hylleberg, Engle, Granger & Yoo (1990) test used. suroot.test = 'ocsb'\t\t: Osborn-Chui-Smith-Birchenhall (1988) test used (null hypothesis seasonal unit root exists). suroot.test = 'correlogram'\t: function written based M4 Competition Seasonality Test.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Seasonality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonality Tests for The ATAforecasting — ATA.Seasonality","text":"","code":"ATA.Seasonality(input, ppy, attr_set)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Seasonality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonality Tests for The ATAforecasting — ATA.Seasonality","text":"input data. ppy Frequency data. attr_set Assign ATA.SeasAttr function. Attributes set unit root, seasonality tests.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Seasonality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonality Tests for The ATAforecasting — ATA.Seasonality","text":"TRUE serie seasonality. Otherwise, FALSE.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Seasonality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Seasonality Tests for The ATAforecasting — ATA.Seasonality","text":"#'Dickey DA, Fuller WA (1979). “Distribution Estimators Autoregressive Time Series Unit Root.” Journal American Statistical Association, 74(366), 427–431. #'Said SE, Dickey DA (1984). “Testing Unit Roots Autoregressive-Moving Average Models Unknown Order.” Biometrika, 71(3), 599–607. #'Dickey DA, Hasza DP, Fuller WA (1984). “Testing Unit Roots Seasonal Time Series.” Journal American Statistical Association, 79(386), 355–367. #'Phillips PCB, Perron P (1988). “Testing Unit Root Time Series Regression.” Biometrika, 75(2), 335–346. #'Osborn DR, Chui APL, Smith J, Birchenhall CR (1988). “Seasonality order integration consumption.” Oxford Bulletin Economics Statistics, 50(4), 361–377. #'Hylleberg S, Engle RF, Granger CWJ, Yoo BS (1990). “Seasonal integration cointegration.” Journal Econometrics, 1344(1), 215–238. #'Kwiatkowski D, Phillips P, Schmidt P, Shin Y (1992). “Testing null hypothesis stationarity alternative unit root: sure economic time series unit root?” Journal Econometrics, 54(1–3), 159–178. #'Canova F, Hansen (1995). “Seasonal Patterns Constant Time? Test Seasonal Stability.” Journal Business Economic Statistics, 13(3), 237–252. #'Wang X, Smith KA, Hyndman RJ (2006). “Characteristic-based clustering time series data.” Data Mining Knowledge Discovery, 13(3), 335–364.","code":""},{"path":[]},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Seasonality.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Seasonality Tests for The ATAforecasting — ATA.Seasonality","text":"Ali Sabri Taylan Hanife Taylan Selamlar","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Lag/Lead (Shift) Function for Univariate Series — ATA.Shift","title":"Lag/Lead (Shift) Function for Univariate Series — ATA.Shift","text":"Lag/Lead (Shift) Function Univariate Series","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lag/Lead (Shift) Function for Univariate Series — ATA.Shift","text":"","code":"ATA.Shift(x, shift_by, fill = NA)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lag/Lead (Shift) Function for Univariate Series — ATA.Shift","text":"x given vector shift_by lag lead parameter fill value used fill rows","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lag/Lead (Shift) Function for Univariate Series — ATA.Shift","text":"Generating lag/lead variables","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Shift_Mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Lag/Lead (Shift) Function for Multivariate Series — ATA.Shift_Mat","title":"Lag/Lead (Shift) Function for Multivariate Series — ATA.Shift_Mat","text":"Lag/Lead (Shift) Function Multivariate Series","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Shift_Mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lag/Lead (Shift) Function for Multivariate Series — ATA.Shift_Mat","text":"","code":"ATA.Shift_Mat(X, direction = \"down\", shift_by = 1, fill = NA)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Shift_Mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lag/Lead (Shift) Function for Multivariate Series — ATA.Shift_Mat","text":"X given matrice direction direction shifting. Default \"\". shift_by number rows shifed upwards/downwards fill value used fill rows","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Shift_Mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lag/Lead (Shift) Function for Multivariate Series — ATA.Shift_Mat","text":"Generating lag/lead matrice","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation Techniques for The ATAforecasting — ATA.Transform","title":"Transformation Techniques for The ATAforecasting — ATA.Transform","text":"function provides applicability different types transformation techniques data Ata method applied. ATA.Transform function works many different types inputs.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation Techniques for The ATAforecasting — ATA.Transform","text":"","code":"ATA.Transform(   X,   tMethod = c(\"Box_Cox\", \"Sqrt\", \"Reciprocal\", \"Log\", \"NegLog\", \"Modulus\",     \"BickelDoksum\", \"Manly\", \"Dual\", \"YeoJohnson\", \"GPower\", \"GLog\"),   tLambda,   tShift = 0,   bcMethod = c(\"loglik\", \"guerrero\"),   bcLower = 0,   bcUpper = 5 )"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation Techniques for The ATAforecasting — ATA.Transform","text":"X numeric vector time series class ts msts -sample. tMethod Box-Cox power transformation family consist \"Box_Cox\", \"Sqrt\", \"Reciprocal\", \"Log\", \"NegLog\", \"Modulus\", \"BickelDoksum\", \"Manly\", \"Dual\", \"YeoJohnson\", \"GPower\", \"GLog\" ATAforecasting package. transformation process needs shift parameter, ATA.Transform calculate required shift parameter automatically. tLambda Box-Cox power transformation family parameter. Default NULL. lambda set NULL, required \"lambda\" parameter calculated automatically based \"bcMethod, bcLower, bcUpper\". tShift Box-Cox power transformation family shifting parameter. Default 0. \"transform.method\" selected, required shifting parameter calculated automatically according dataset. bcMethod Choose method used calculating lambda. \"loglik\" default. method \"guerrero\" (Guerrero, V.M. (1993)). bcLower Lower limit possible lambda values. lower value limited -5. Default value 0. bcUpper Upper limit possible lambda values. upper value limited 5. Default value 1.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation Techniques for The ATAforecasting — ATA.Transform","text":"list object consists transformation parameters transformed data. ATA.Transform list containing least following elements: trfmX   : Transformed data tLambda : Box-Cox power transformation family parameter tShift  : Box-Cox power transformation family shifting parameter","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.Transform.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transformation Techniques for The ATAforecasting — ATA.Transform","text":"#'Tukey JW (1957). “Comparative Anatomy Transformations.” Annals Mathematical Statistics, 28(3), 602–632. #'Box GEP, Cox DR (1964). “Analysis Transformations.” Journal Royal Statistical Society. Series B (Methodological), 26(2), 211–252. #'Manly BFJ (1976). “Exponential data transformations.” Journal Royal Statistical Society Series D, 25(1), 37–42. #'John JA, Draper NR (1980). “alternative family transformations.” Journal Royal Statistical Society Series C, 29(2), 190–197. #'Bickel PJ, Doksum KA (1982). “analysis transformations revisited.” Journal American Statistical Association, 76(374), 296–311. #'Sakia RM (1992). “Box-Cox Transformation Technique: Review.” Journal Royal Statistical Society Series D, 41(2), 169–178. #'Guerrero VM (1993). “Time-series analysis supported power transformations.” Journal Forecasting, 12(1), 37–48. #'Yeo , Johnson RA (2000). “New Family Power Transformations Improve Normality Symmetry.” Biometrika, 87(4), 954–959. #'Durbin BP, Hardin JS, Hawkins DM, Rocke DM (2002). “variance-stabilizing transformation gene-expression microarray data.” Bioinformatics, 18(1), 105–110. #'Whittaker J, Whitehead C, Somers M (2005). “neglog transformation quantile regression analysis large credit scoring database.” Journal Royal Statistical Society Series C, 54(4), 863–878. #'Yang Z (2005). “modified family power transformations.” Economics Letters, 92(1), 14–19. #'Kelmansky DM, Martinez EJ, Leiva V (2013). “new variance stabilizing transformation gene expression data analysis.” Statistical Applications Genetics Molecular Biology, 12(6), 653–666.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATA","title":"Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATA","text":"ATA generic function Ata Method forecasting. Ata method based modified simple exponential smoothing described Yapar, G. (2016) <doi:10.15672/HJMS.201614320580> , Yapar G., Capar, S., Selamlar, H. T., Yavuz, . (2017) <doi:10.15672/HJMS.2017.493> Yapar G., Selamlar, H. T., Capar, S., Yavuz, . (2019) <doi:10.15672/hujms.461032> new univariate time series forecasting method provides innovative solutions issues faced initialization optimization stages existing methods. Forecasting performance Ata method superior existing methods terms easy implementation accurate forecasting. can applied non-seasonal seasonal time series can decomposed four components (remainder, level, trend seasonal). methodology performed well M3 M4-competition data.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATA","text":"","code":"ATA(   X,   Y = NULL,   parP = NULL,   parQ = NULL,   parPHI = NULL,   model.type = NULL,   seasonal.test = NULL,   seasonal.model = \"decomp\",   seasonal.period = NULL,   seasonal.type = NULL,   seasonal.test.attr = NULL,   find.period = NULL,   accuracy.type = NULL,   nmse = 3,   level.fixed = FALSE,   trend.opt = \"none\",   h = NULL,   train_test_split = NULL,   holdout = FALSE,   holdout.adjustedP = TRUE,   holdout.set_size = NULL,   holdout.onestep = FALSE,   holdin = FALSE,   transform.order = \"before\",   transform.method = NULL,   transform.attr = NULL,   lambda = NULL,   shift = 0,   initial.level = \"none\",   initial.trend = \"none\",   ci.level = 95,   start.phi = NULL,   end.phi = NULL,   size.phi = NULL,   negative.forecast = TRUE,   onestep = FALSE,   print.out = TRUE,   plot.out = TRUE )"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATA","text":"X numeric vector time series class ts msts -sample. Y numeric vector time series class ts msts -sample. -sample data, can split -sample data training test dataset train_test_split argument. parP Value Level parameter p. NULL \"opt\", estimated. p integer values 1 length(X). parQ Value Trend parameter q. NULL \"opt\", estimated. q integer values 0 p. parPHI Value Damping Trend parameter phi. NULL \"opt\", estimated. phi values 0 1. model.type one-character string identifying method using framework terminology. letter \"\" additive model, letter \"M\" multiplicative model. NULL, letters tried best model (according accuracy measure accuracy.type) returned. seasonal.test Testing stationary seasonality. TRUE, method firstly uses test=\"adf\", Augmented Dickey-Fuller, unit-root test test returns least number differences required pass test level alpha. unit-root test, seasonal test applies stationary X. seasonal.model string identifying method seasonal decomposition. NULL, \"decomp\" method default. c(\"none\", \"decomp\", \"stl\", \"stlplus\", \"tbats\", \"stR\") phrases methods denote none    : seasonal decomposition required. decomp     : classical seasonal decomposition. decomp, stats package used. stl        : seasonal-trend decomposition procedure based loess developed Cleveland et al. (1990). stl, stats forecast packages used. Multiple seasonal periods allowed. stlplus    : seasonal-trend decomposition procedure based loess developed Cleveland et al. (1990). stlplus, stlplus package used. tbats   : exponential smoothing state space model Box-Cox transformation, ARMA errors, trend seasonal components.                             described De Livera, Hyndman & Snyder (2011). Parallel processing used default speed computations. tbats, forecast package used. Multiple seasonal periods allowed. stR        : seasonal-trend decomposition procedure based regression developed Dokumentov Hyndman (2015). stR, stR package used. Multiple seasonal periods allowed. x13        : seasonal-trend decomposition procedure based X13ARIMA/SEATS. x13, seasonal package used. x11        : seasonal-trend decomposition procedure based X11. x11, seasonal package used. seasonal.period Value(s) seasonal periodicity. NULL, frequency X default  seasonal.period integer, X must msts time series object. c(s1,s2,s3,...) multiple period. X multiple periodicity, \"tbats\" \"stR\" seasonal model selected. seasonal.type one-character string identifying method seasonal component framework. letter \"\" additive model, letter \"M\" multiplicative model. NULL, letters tried best model (according accuracy measure accuracy.type) returned. seasonal decomposition methods except decomp \"M\", Box-Cox transformation lambda=0 selected. seasonal.test.attr Attributes set unit root, seasonality tests, X13ARIMA/SEATS X11. NULL, corrgram.tcrit=1.28, uroot.test=\"adf\", suroot.test=\"correlogram\", suroot.uroot=TRUE, uroot.type=\"trend\", uroot.alpha=0.05, suroot.alpha=0.05, uroot.maxd=2, suroot.maxD=1, suroot.m=frequency(X), uroot.pkg=\"urca\", multi.period=\"min\", x13.estimate.maxiter=1500, x13.estimate.tol=1.0e-5, x11.estimate.maxiter=1500, x11.estimate.tol=1.0e-5. want change, please use ATA.SeasAttr function output. example, can use seasonal.test.attr = ATA.SeasAttr(corrgram.tcrit=1.65) equation ATA function. find.period Find seasonal period(s) automatically. NULL, 0 default. find.period, 0 : none 1 : single period find.freq 2 : single period forecast::findfrequency 3 : multiple period find.freq & stR 4 : multiple period find.freq & tbats 5 : multiple period find.freq & stl accuracy.type Accuracy measure optimization best ATA Method forecasting. NULL, sMAPE default. lik        : maximum likelihood functions sigma    : residual variance. MAE        : mean absolute error. MSE        : mean square error. AMSE    : Average MSE first `nmse` forecast horizons using k-step forecast. GAMSE    : Average MSE first `nmse` forecast horizons using one-step forecast. RMSE    : root mean squared error. MPE        : mean percentage error. MAPE    : mean absolute percentage error. sMAPE    : symmetric mean absolute percentage error. MASE    : mean absolute scaled error. OWA        : overall weighted average MASE sMAPE. MdAE    : median absolute error. MdSE    : median square error. RMdSE    : root median squared error. MdPE    : median percentage error. MdAPE    : median absolute percentage error. sMdAPE    : symmetric median absolute percentage error. nmse accuracy.type == \"AMSE\" \"GAMSE\", nmse provides number steps average multistep MSE (`2<=nmse<=30`). level.fixed TRUE, \"pStarQ\"  –> First, fits ATA(p,0) p = p* optimized q=0. , fits ATA(p*,q) q optimized p = p*. trend.opt trend.opt, none : none fixed : \"pBullet\" –> Fits ATA(p,1) p = p* optimized q = 1. search : \"qBullet\" –> Fits ATA(p,q) p = p* optimized q = q* (q > 0). , fits ATA(p*,q) q optimized p = p*. h forecast horizon. parameter NULL; frequency X 4, parameter set 8; frequency X 12, parameter set 18; parameter set 6 cases. train_test_split Y NULL, parameter divides X two parts: training set (-sample) test set (-sample). train_test_split number periods forecasting size test set. value 0 1, percentage length active. holdout Default FALSE. TRUE, ATA Method uses holdout forecasting accuracy measure select best model. holdout forecasting, last data points removed data series. remaining historical data series called -sample data (training set), holdout data called validation set (holdout set). TRUE, holdout.set_size used holdout data. holdout.adjustedP Default TRUE. TRUE, parP adjusted length training - validation sets -sample set holdout forecasting active. holdout.set_size holdout TRUE, parameter h defining holdout set. holdout.onestep Default FALSE. TRUE, dynamic forecast strategy uses one-step model multiple times (h forecast horizon) holdout prediction prior time step used input making prediction following time step. holdin Default FALSE. TRUE, ATA Method uses hold-forecasting accuracy measure select best model. hold-forecasting, last h-length data points used accuracy measure. transform.order \"\", Box-Cox transformation family applied seasonal decomposition techniques applied. \"\", seasonal decomposition techniques applied Box-Cox transformation family applied. transform.method Transformation method  –> \"Box_Cox\", \"Sqrt\", \"Reciprocal\", \"Log\", \"NegLog\", \"Modulus\", \"BickelDoksum\", \"Manly\", \"Dual\", \"YeoJohnson\", \"GPower\", \"GLog\". transformation process needs shift parameter, ATA.Transform calculate required shift parameter automatically. transform.attr Attributes set Box-Cox transformation. NULL, bcMethod = \"loglik\", bcLower = 0, bcUpper = 1, bcBiasAdj = FALSE. want change, please use ATA.BoxCoxAttr function output. lambda Box-Cox power transformation family parameter. Default NULL. \"transform.method\" selected lambda set NULL, required \"lambda\" parameter calculated automatically based \"transform.attr\". shift Box-Cox power transformation family shifting parameter. Default 0. \"transform.method\" selected, required shifting parameter calculated automatically according dataset. initial.level \"none\" default, none    : ATA Method calculates pth observation X level. mean     : ATA Method calculates average first p value Xfor level. median: ATA Method calculates median first p value Xfor level. initial.trend \"none\" default, none    : ATA Method calculates qth observation X trend. mean     : ATA Method calculates average first q value X(T)-X(T-1) trend. median: ATA Method calculates median first q value X(T)-X(T-1) trend. ci.level Confidence Interval levels forecasting. start.phi Lower boundary searching parPHI.NULL, 0 default. end.phi Upper boundary searching parPHI. NULL, 1 default. size.phi Increment step searching parPHI. NULL, step size determined value allows bounds optimised value parPHI divided 20 equal parts. negative.forecast Negative values allowed forecasting. Default value TRUE. FALSE, negative values forecasting set 0. onestep Default FALSE. TRUE, dynamic forecast strategy uses one-step model multiple times (h forecast horizon) prediction prior time step used input making prediction following time step. print.Default TRUE. FALSE, summary ATA Method shown. plot.Default TRUE. FALSE, graphics ATA Method shown.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATA","text":"Returns object class ata. generic accessor functions ATA.Forecast ATA.Accuracy extract useful features value returned ATA associated functions. ata object list containing least following elements actual\t\t: original time series. fitted\t\t: Fitted values (one-step forecasts). mean fitted values calculated ensemble. level\t\t  : Estimated level values. trend\t\t  : Estimated trend values. residuals\t: Original values minus fitted values. coefp\t\t  : weights attached level observations. coefq\t\t  : weights attached trend observations. p\t\t      : Optimum level parameter. q\t\t      : Optimum trend parameter. phi\t\t    : Optimum damped trend parameter. model.type: Form trend. h\t\t      : number steps forecast ahead. forecast\t: Point forecasts time series. .sample: Test set time series. method\t\t: name optimum forecasting method character string ATA(P,Q,PHI)(Error,Trend,Season). initial.level     : Selected initial level values time series forecasting method. initial.trend     : Selected initial trend values time series forecasting method. level.fixed       : choice optional level-fixed trended methods. trend.opt       : choice optional trend level optimized trended methods (none, trend.fixed trend.search). transform.method  : Box-Cox power transformation family method  –> Box_Cox, Sqrt, Reciprocal, Log, NegLog, Modulus, BickelDoksum, Manly, Dual, YeoJohnson, GPower, GLog. transform.order   : Define apply Box-Cox power transformation techniques, seasonal decomposition. lambda  \t: Box-Cox power transformation family parameter. shift\t\t  : Box-Cox power transformation family shifting parameter. accuracy.type\t\t  : Accuracy measure chosen model selection. nmse\t\t  : number steps average multistep MSE. accuracy \t: sample accuracy measures descriptives calculated optimum model given. par.specs \t: Parameter sets Information Criteria. holdout\t\t: Holdout forecasting TRUE FALSE. holdout.training \t: Training set holdout forecasting. holdout.validation: Validation set holdout forecasting. holdout.forecast\t: Holdout forecast. holdout.accuracy\t: Accuracy measure chosen model selection holdout forecasting. holdin\t\t: Hold-forecasting TRUE FALSE. .season\t: Indicates whether contains seasonal pattern. seasonal.model\t\t: name selected decomposition method. seasonal.type\t  \t: Form seasonality. seasonal.period\t\t: number seasonality periods. seasonal.index\t\t: Weights seasonality. seasonal\t: Estimated seasonal values. seasonal.adjusted\t: Deseasonalized time series values. execution.time\t\t: real CPU time 'seconds' spent system executing task, including time spent executing run-time system services behalf. calculation.time\t: much real time 'seconds' currently running R process already taken.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATA","text":"Returns ATA(p,q,phi)(E,T,S) applied X.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATA","text":"#'Yapar G, Yavuz , Selamlar HT (2017). “Exponential Smoothing Fail? Depth Comparison ATA-Simple Simple Exponential Smoothing.” Turkish Journal Forecasting, 1(1), 30–39. #'Yapar G, Capar S, Selamlar HT, Yavuz (2018). “Modified Holt's Linear Trend Method.” Hacettepe University Journal Mathematics Statistics, 47(5), 1394–1403. #'Yapar G (2018). “Modified simple exponential smoothing.” Hacettepe University Journal Mathematics Statistics, 47(3), 741–754. #'Yapar G, Selamlar HT, Capar S, Yavuz (2019). “ATA method.” Hacettepe Journal Mathematics Statistics, 48(6), 1838-1844.","code":""},{"path":[]},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATA","text":"Ali Sabri Taylan Hanife Taylan Selamlar","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATA","text":"","code":"trainATA <-  head(touristTR, 84) testATA <- window(touristTR, start = 2015, end = 2016.917) ata_fit <- ATA(trainATA, h=24, parQ = 1, seasonal.test = TRUE, seasonal.model = \"stl\")  #> ATA(9,1,1) (A,M,M)  #>  #>    model.type: M  #>  #>    seasonal.model: stl  #>  #>    seasonal.type: M  #>  #>    forecast horizon: 24  #>  #>    accuracy.type: sMAPE  #>  #> Model Fitting Measures:  #>  #>               sigma2               loglik                  MAE  #> 38329818197.22584534       -1205.95857480      113608.75598307  #>                  MSE                 RMSE                  MPE  #> 35558987966.10109711      188570.90964966          -0.29190478  #>                 MAPE                sMAPE                 MASE  #>           4.32739502           4.29898466           0.24862795  #>                  OWA  #>           0.00000497  #>  #> In-Sample Accuracy Measures:  #>  #>              MdAE              MdSE             RMdSE              MdPE  #>      64273.477202 4131079871.624473      64273.477202          0.526554  #>             MdAPE            sMdAPE  #>          2.702918          2.736661  #>  #> Out-Sample Accuracy Measures:  #>  #>   MAE   MSE  RMSE   MPE  MAPE sMAPE  MASE   OWA  #>    NA    NA    NA    NA    NA    NA    NA    NA  #>  #> Out-Sample Accuracy Measures:  #>  #>   MdAE   MdSE  RMdSE   MdPE  MdAPE sMdAPE  #>     NA     NA     NA     NA     NA     NA  #>  #> Information Criteria:  #>  #>      AIC     AICc      BIC  #> 2425.917 2427.391 2442.933  #>  #>  #>    user  system elapsed  #>   0.046   0.041   0.201  #>  #> calculation.time: 0.2011  #>  #>  #> Forecasts:  #> Time Series: #> Start = 2015.00694444444  #> End = 2016.92361111111  #> Frequency = 12  #>  [1] 1290137 1231085 1735277 2297139 3609797 4277848 5137010 5594614 4891925 #> [10] 4188325 2155062 1418780 1363532 1301120 1833994 2427820 3815154 4521210 #> [19] 5429249 5912884 5170221 4426594 2277661 1499492 #>  #>  ata_fc <- ATA.Forecast(ata_fit, out.sample = testATA) #> Forecast horizon has been set to the length of out.sample data. #> Time Series: #> Start = 2015.00694444444  #> End = 2016.92361111111  #> Frequency = 12  #>        lower forecast   upper #> 2015  847533  1219265 1590997 #> 2015  636994  1162702 1688410 #> 2015  993966  1637824 2281682 #> 2015 1423263  2166726 2910190 #> 2015 2571436  3402653 4233871 #> 2015 3119201  4029755 4940308 #> 2016 3852441  4835951 5819461 #> 2016 4211903  5263319 6314736 #> 2016 3484061  4599256 5714452 #> 2016 2759677  3935196 5110715 #> 2016  790609  2023504 3256398 #> 2016   43588  1331305 2619021 #> 2016  -61665  1278633 2618931 #> 2016 -171577  1219316 2610209 #> 2016  277862  1717573 3157284 #> 2016  785301  2272228 3759155 #> 2016 2035645  3568335 5101024 #> 2016 2648846  4225970 5803095 #> 2017 3451080  5071422 6691763 #> 2017 3857165  5519600 7182035 #> 2017 3119713  4823202 6526691 #> 2017 2383231  4126808 5870385 #> 2017  339269  2122032 3904795 #> 2017 -424978  1396128 3217235 ata_accry <- ATA.Accuracy(ata_fc) #> Model Fitting Measures:  #>  #>               sigma2               loglik                  MAE  #> 38329818197.22584534       -1205.95857480      113608.75598307  #>                  MSE                 RMSE                  MPE  #> 35558987966.10109711      188570.90964966          -0.29190478  #>                 MAPE                sMAPE                 MASE  #>           4.32739502           4.29898466           0.24862795  #>                  OWA  #>           0.00000497  #>  #> Out-Sample Accuracy Measures:  #>  #>   MAE   MSE  RMSE   MPE  MAPE sMAPE  MASE   OWA  #>    NA    NA    NA    NA    NA    NA    NA    NA  #>  #>"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Specialized Plot Function of The ATAforecasting — ATA.Plot","title":"Specialized Plot Function of The ATAforecasting — ATA.Plot","text":"Specialized Plot Function ATAforecasting","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specialized Plot Function of The ATAforecasting — ATA.Plot","text":"","code":"ATA.Plot(object, fcol = 4, flty = 2, flwd = 2, ...)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specialized Plot Function of The ATAforecasting — ATA.Plot","text":"object object ata fcol line color flty line type flwd line width ... inputs","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specialized Plot Function of The ATAforecasting — ATA.Plot","text":"graphic output components ATAforecasting","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.print.html","id":null,"dir":"Reference","previous_headings":"","what":"Specialized Screen Print Function of The ATAforecasting — ATA.Print","title":"Specialized Screen Print Function of The ATAforecasting — ATA.Print","text":"Specialized Screen Print Function ATAforecasting","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specialized Screen Print Function of The ATAforecasting — ATA.Print","text":"","code":"ATA.Print(object, ...)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specialized Screen Print Function of The ATAforecasting — ATA.Print","text":"object object ata ... inputs","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATA.print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specialized Screen Print Function of The ATAforecasting — ATA.Print","text":"summary results ATAforecasting","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATAforecasting-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ATAforecasting: Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATAforecasting-package","title":"ATAforecasting: Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATAforecasting-package","text":"Returns ATA(p,q,phi)(E,T,S) applied data. Ata method based modified simple exponential smoothing described Yapar, G. (2016) <doi:10.15672/HJMS.201614320580> , Yapar G., Capar, S., Selamlar, H. T., Yavuz, . (2017) <doi:10.15672/HJMS.2017.493> Yapar G., Selamlar, H. T., Capar, S., Yavuz, . (2019) <doi:10.15672/hujms.461032> new univariate time series forecasting method provides innovative solutions issues faced initialization optimization stages existing methods. Forecasting performance Ata method superior existing methods terms easy implementation accurate forecasting. can applied non-seasonal seasonal time series can decomposed four components (remainder, level, trend seasonal). methodology performed well M3 M4-competition data. Returns ATA(p,q,phi) (E,T,S) applied data.  Ata method (Yapar et al. (2019) doi:10.15672/hujms.461032 ), alternative exponential smoothing (described Yapar (2016) doi:10.15672/HJMS.201614320580 , Yapar et al. (2017) doi:10.15672/HJMS.2017.493 ), new univariate time series forecasting method provides innovative solutions issues faced initialization optimization stages existing forecasting methods. Forecasting performance Ata method superior existing methods terms easy implementation accurate forecasting. can applied non-seasonal seasonal time series can decomposed four components (remainder, level, trend seasonal). methodology performed well M3 M4-competition data. package written based Ali Sabri Taylan’s PhD dissertation.","code":""},{"path":[]},{"path":"https://alsabtay.github.io/ATAforecasting/reference/ATAforecasting-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ATAforecasting: Automatic Time Series Analysis and Forecasting using Ata Method with Box-Cox Power Transformations Family and Seasonal Decomposition Techniques — ATAforecasting-package","text":"Maintainer: Ali Sabri Taylan alisabritaylan@gmail.com (ORCID) [copyright holder] Authors: Hanife Taylan Selamlar (ORCID) [copyright holder] Guckan Yapar (ORCID) [thesis advisor, copyright holder] Ali Sabri Taylan Hanife Taylan Selamlar Maintainer: alisabritaylan@gmail.com","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.freq.fourier.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Frequency Using Periodogram — find.freq.fourier","title":"Find Frequency Using Periodogram — find.freq.fourier","text":"Find Frequency Using Periodogram","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.freq.fourier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Frequency Using Periodogram — find.freq.fourier","text":"","code":"find.freq.fourier(x)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.freq.fourier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Frequency Using Periodogram — find.freq.fourier","text":"x univariate time series","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.freq.fourier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Frequency Using Periodogram — find.freq.fourier","text":"frequency/cycle given data","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Frequency Using Spectral Density Of A Time Series From AR Fit — find.freq","title":"Find Frequency Using Spectral Density Of A Time Series From AR Fit — find.freq","text":"Find Frequency Using Spectral Density Time Series AR Fit","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Frequency Using Spectral Density Of A Time Series From AR Fit — find.freq","text":"","code":"find.freq(x)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Frequency Using Spectral Density Of A Time Series From AR Fit — find.freq","text":"x univariate time series","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Frequency Using Spectral Density Of A Time Series From AR Fit — find.freq","text":"frequency/cycle given time data","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.multi.freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Multi Frequency Using Spectral Density Of A Time Series From AR Fit — find.multi.freq","title":"Find Multi Frequency Using Spectral Density Of A Time Series From AR Fit — find.multi.freq","text":"Find Multi Frequency Using Spectral Density Time Series AR Fit","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.multi.freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Multi Frequency Using Spectral Density Of A Time Series From AR Fit — find.multi.freq","text":"","code":"find.multi.freq(x)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.multi.freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Multi Frequency Using Spectral Density Of A Time Series From AR Fit — find.multi.freq","text":"x univariate time series","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/find.multi.freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Multi Frequency Using Spectral Density Of A Time Series From AR Fit — find.multi.freq","text":"multi frequencies/cycles given data","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/fundingTR.html","id":null,"dir":"Reference","previous_headings":"","what":"Weekly Net Funding Level of Central Bank of Republic of Turkey — fundingTR","title":"Weekly Net Funding Level of Central Bank of Republic of Turkey — fundingTR","text":"Weekly Net Funding Level Central Bank Republic Turkey:  Jan 7, 2011 Jan 08, 2021.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/fundingTR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weekly Net Funding Level of Central Bank of Republic of Turkey — fundingTR","text":"","code":"data(fundingTR)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/fundingTR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Weekly Net Funding Level of Central Bank of Republic of Turkey — fundingTR","text":"Time series data","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/fundingTR.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Weekly Net Funding Level of Central Bank of Republic of Turkey — fundingTR","text":"Central Bank Republic Turkey – CBRT.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/fundingTR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weekly Net Funding Level of Central Bank of Republic of Turkey — fundingTR","text":"","code":"plot(fundingTR)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/touristTR.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly number of tourists arrived in Turkey — touristTR","title":"Monthly number of tourists arrived in Turkey — touristTR","text":"Monthly number tourists arrived Turkey: Jan 2008 Dec 2020.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/touristTR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly number of tourists arrived in Turkey — touristTR","text":"","code":"data(touristTR)"},{"path":"https://alsabtay.github.io/ATAforecasting/reference/touristTR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monthly number of tourists arrived in Turkey — touristTR","text":"Time series data","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/touristTR.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Monthly number of tourists arrived in Turkey — touristTR","text":"Central Bank Republic Turkey – CBRT.","code":""},{"path":"https://alsabtay.github.io/ATAforecasting/reference/touristTR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monthly number of tourists arrived in Turkey — touristTR","text":"","code":"plot(touristTR)"}]
